# version: '3.9'
services:
  billingsystem:
    #  
    build:
      context: .
      dockerfile: Dockerfile
    container_name: billingsystem
    volumes:
      - log_data:/vol/web
      - static_data:/staticfiles/
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUERPUSER_EMAIL=${DJANGO_SUERPUSER_EMAIL}
      - POSTGRES_ENGINE=django.db.backends.postgresql
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - ENCRYPTED_EMAIL_PASSWORD=${ENCRYPTED_EMAIL_PASSWORD}
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,billingsystem
      - CSRF_TRUSTED_ORIGINS=http://localhost:8080,http://127.0.0.1
      - SERVER_NAME=billingsystem
      - SERVER_PORT=8000
    command: sh -c "sh /scripts/collectstatic.sh && sh /scripts/migrate.sh && sh /scripts/entrypoint.sh"
    depends_on:
      - db
    # networks:
    #  - my-network

  proxy:
    # dns:
    #  - 8.8.8.8
    #  - 8.8.4.4
    build:
      context: ./proxy
      dockerfile: Dockerfile
    container_name: proxy
    environment:
      - SERVER_NAME=billingsystem
      - SERVER_PORT=8000
      - STATIC_LOCATION=/vol/static
    volumes:
      - static_data:/vol/static/staticfiles/
    ports:
      - "443:443"
    depends_on:
      - billingsystem
    # networks:
    #  - my-network
  db:
    # dns:
    #  - 8.8.8.8
    #  - 8.8.4.4
    image: postgres:14.15-alpine3.20
    restart: always
    container_name: db
    # command: ["executable", "arg"]
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=postgres
      - POSTGRES_HOST=db
    ports:
      - "5432:5432"
    expose:
      - 5432
    # networks:
    #  - my-network

volumes:
  static_data:
  db_data:
  log_data:

networks:
  my-network:
    driver: bridge
