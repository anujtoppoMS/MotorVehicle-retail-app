name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - uses: actions/checkout@v4    
    - name: Run Tests
      uses: docker/setup-docker-action@v4
      env:
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        DJANGO_SUPERUSER_USERNAME: ${{ secrets.DJANGO_SUPERUSER_USERNAME }}
        DJANGO_SUERPUSER_EMAIL: ${{ secrets.DJANGO_SUERPUSER_EMAIL }}
        POSTGRES_ENGINE: 'django.db.backends.postgresql'
        POSTGRES_DB: 'postgres'
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_USER: 'postgres'
        POSTGRES_HOST: 'db-service'
        POSTGRES_PORT: '5432'
        EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
        ENCRYPTED_EMAIL_PASSWORD: ${{ secrets.ENCRYPTED_EMAIL_PASSWORD }}
        ALLOWED_HOSTS: 'localhost,127.0.0.1,0.0.0.0,billingsystem'
        CSRF_TRUSTED_ORIGINS: 'http://localhost:8080,http://127.0.0.1'
        SERVER_NAME: 'billingsystem'
        SERVER_PORT: '8000'
    - run: |
        set -x
        docker version
        docker compose -f docker-compose-deploy.yaml up --build -d
        docker exec -i $(docker ps --format {{.Names}} | grep -i proxy) netstat -tua
        docker exec -i $(docker ps --format {{.Names}} | grep -i billingsystem) netstat -tua
        docker compose -f docker-compose-deploy.yaml down