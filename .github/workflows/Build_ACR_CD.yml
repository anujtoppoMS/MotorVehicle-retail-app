name: Docker Image CI

on:
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Build the Docker image
      run: |
        # echo ${{ secrets.AZURE_SECRET }} | docker login -u ${{ secrets.ACR_USERNAME }} --password-stdin monarch.azurecr.io
        echo ${{ secrets.DOCKER_SECRET }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker compose --file docker-compose-deploy.yaml up --build -d
        container_name=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep -i billing)
        # docker tag $container_name monarch.azurecr.io/$container_name
        docker tag $container_name ${{ secrets.DOCKER_USERNAME }}/billingsystem:v1
        # docker push monarch.azurecr.io/$container_name
        docker push ${{ secrets.DOCKER_USERNAME }}/billingsystem:v1
        container_name=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep -i proxy)
        # docker tag $container_name monarch.azurecr.io/$container_name
        docker tag $container_name ${{ secrets.DOCKER_USERNAME }}/proxy:v1
        docker push ${{ secrets.DOCKER_USERNAME }}/proxy:v1

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #   - name: Checkout Repository
  #     uses: actions/checkout@v4
      
  #   - name: Set up Kubectl
  #     uses: azure/setup-kubectl@v4

  #   - name: Set Context for Kubernetes
  #     uses: Azure/k8s-set-context@v4
  #     with:
  #       kubeconfig: ${{ secrets.KUBE_CONFIG }}

  #   - name: Check for env-config ConfigMap and apply
  #     run: |
  #       if ! kubectl get configmap env-config; then
  #           kubectl create configmap env-config --from-env-file=.env
  #       else
  #           kubectl create configmap env-config --from-env-file=.env --dry-run=client -o yaml | kubectl apply -f -
  #       fi
        
  #   - name: Deploy to AKS
  #     uses: Azure/k8s-deploy@v4
  #     with:
  #       action: deploy
  #       manifests: | 
  #         pvc.yaml 
  #         billing-app.yaml
  #         ingress.yaml
  #         loadbalancer.yaml
          
  #   - name: Verify Deployment 
  #     run: | 
  #       kubectl rollout status deployment/combined-deployment
